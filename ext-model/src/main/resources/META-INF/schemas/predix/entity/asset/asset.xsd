<?xml version="1.0" encoding="UTF-8"?>
<schema targetNamespace="http://ge.com/predix/entity/asset"
	elementFormDefault="qualified" xmlns="http://www.w3.org/2001/XMLSchema"
	xmlns:asset="http://ge.com/predix/entity/asset"
	xmlns:model="http://ge.com/predix/entity/model"
	xmlns:data="http://ge.com/predix/entity/fielddata"
	xmlns:map="http://ge.com/predix/entity/util/map"
	xmlns:xjc="http://java.sun.com/xml/ns/jaxb/xjc"
	xmlns:annox="http://annox.dev.java.net"
	xmlns:jaxb="http://java.sun.com/xml/ns/jaxb"
	xmlns:ja="http://annox.dev.java.net/com.fasterxml.jackson.annotation"
	xmlns:jad="http://annox.dev.java.net/com.fasterxml.jackson.databind.annotation"
	jaxb:extensionBindingPrefixes="xjc annox" jaxb:version="2.0" xmlns:fieldData="http://ge.com/predix/entity/fielddata">


	<import schemaLocation="../model/model.xsd"
		namespace="http://ge.com/predix/entity/model">
	</import>
	<import schemaLocation="../util/map/map.xsd"
		namespace="http://ge.com/predix/entity/util/map">
	</import>
	<import schemaLocation="../fielddata/fielddata.xsd" namespace="http://ge.com/predix/entity/fielddata"></import>
	<complexType name="Asset">
		<complexContent>
			<extension base="model:TypedModel">
				<sequence>
					<element name="assetId" type="string"></element>
					<element name="description" type="string"></element>
					<element name="group" type="string"></element>
					<element name="parentUri" type="string"></element>
					<element name="assetTag" type="map:Map">
						<annotation>
							<appinfo>
								<annox:annotate>
									<!--in @JsonSerialize, use contentAs on a Map if values are 100% 
										known -->
									<!-- <jad:JsonSerialize contentAs="com.ge.predix.entity.asset.assetTag" 
										/> -->
									<!-- in @JsonSerialize, Use PredixMapJsonSerializer if values are 
										mixed -->
									<jad:JsonSerialize
										using="com.ge.predix.solsvc.ext.mapper.PredixMapJsonSerializer" />
									<!-- in @JsonDeserialize, just mention the parent class (with the 
										@JsonTypeInfo annotation) and have the predix jsonMapper registerSubTypes, 
										then jackson will take care of it -->
									<jad:JsonDeserialize
										contentAs="com.ge.predix.entity.model.Typed" />
								</annox:annotate>
							</appinfo>
						</annotation>
					</element>
					<element name="attributes" type="map:Map">
						<annotation>
							<appinfo>
								<annox:annotate>
									<!--in @JsonSerialize, use contentAs on a Map if values are 100% 
										known -->
									<!-- <jad:JsonSerialize contentAs="com.ge.predix.entity.asset.assetTag" 
										/> -->
									<!-- in @JsonSerialize, Use PredixMapJsonSerializer if values are 
										mixed -->
									<jad:JsonSerialize
										using="com.ge.predix.solsvc.ext.mapper.PredixMapJsonSerializer" />
									<!-- in @JsonDeserialize, just mention the parent class (with the 
										@JsonTypeInfo annotation) and have the predix jsonMapper registerSubTypes, 
										then jackson will take care of it -->
									<!-- fyi, due to the way Jackson is written, because assetTag is 
										of type Map and this is of type Map, they both must have contentAs=com.ge.predix.entity.model.Typed -->
									<jad:JsonDeserialize
										contentAs="com.ge.predix.entity.model.Typed" />
								</annox:annotate>
							</appinfo>
						</annotation>
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="asset" type="asset:Asset"></element>

	<complexType name="AssetList">
		<complexContent>
			<extension base="data:Data">
				<sequence>
					<element ref="asset:asset" minOccurs="0"
						maxOccurs="unbounded">
					</element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="assetList" type="asset:AssetList" />



	<complexType name="assetTag">
		<complexContent>
			<extension base="model:Typed">
				<sequence>
					<element name="tagUri" type="string"></element>
					<element name="sourceTagId" type="string"></element>
					<element name="outputMinimum" type="double"></element>
					<element name="outputMaximum" type="double"></element>
					<element name="hiAlarmThreshold" type="double"></element>
					<element name="loAlarmThreshold" type="double"></element>
					<element name="lastCalibrated" type="dateTime"></element>
					<element name="locationUUID" type="string"></element>
					<element ref="asset:tagDatasource"></element>
				</sequence>
			</extension>
		</complexContent>
	</complexType>
	<element name="assetTag" type="asset:assetTag" />

	<complexType name="TagDatasource">
		<sequence>
			<element name="nodeName" type="string"></element>
			<element name="isKpi" type="string"></element>
			<element name="fieldUri" type="string"></element>
			<element name="controllerUri" type="string"></element>
			<element name="machineUri" type="string"></element>
			<element name="tagExtensionsUri" type="string"></element>
		</sequence>
	</complexType>
	<element name="tagDatasource" type="asset:TagDatasource" />

</schema>